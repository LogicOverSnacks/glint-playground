import{a as pe,b as He}from"./chunk-SEZ3CXED.js";import{b as ye,c as ve,d as be}from"./chunk-DZWNELDV.js";import{$a as ke,$i as Ke,Ba as z,Ca as ne,Cb as J,Db as Z,Dh as je,Fa as U,Ff as Te,Ga as E,Gg as Se,Ia as D,If as le,Jf as Ve,Jg as $e,Kg as G,Mb as re,Mg as Ee,Ng as Ye,Ob as A,Oi as R,Rg as Le,Ri as Ue,Sb as we,Ua as f,Ud as ae,Ui as Ae,Va as C,Vi as H,Wa as k,Xa as Oe,Xg as M,Yf as de,Z as X,_ as ee,a as xe,ab as Ie,b as fe,cb as F,da as P,ea as O,eb as y,fb as g,fi as Be,j,jb as ie,jj as Qe,kb as oe,kj as Re,lb as ce,lj as he,m as Ce,na as te,o as ue,ob as L,pe as se,pj as me,q as Me,qb as Y,r as Pe,rb as N,si as ze,th as K,ug as De,uh as Q,va as u,wh as Ne,xh as We,yg as Fe,za as B}from"./chunk-R5KNYV3F.js";var ge=(()=>{class r{static{this.\u0275fac=function(t){return new(t||r)}}static{this.\u0275mod=ne({type:r})}static{this.\u0275inj=ee({imports:[me]})}}return r})();var _e=(()=>{class r{getPatchPath(e){switch(e.status){case M.Added:case M.Untracked:return e.newFilePath;case M.Conflicted:case M.Modified:case M.Renamed:return e.oldFilePath===e.newFilePath?e.newFilePath:`${e.oldFilePath} --> ${e.newFilePath}`;case M.Deleted:return e.oldFilePath;default:throw new se(e.status)}}getPatchIcon(e){switch(e.status){case M.Added:case M.Untracked:return"add";case M.Conflicted:return"warning";case M.Modified:return"create";case M.Deleted:return"remove";case M.Renamed:return"swap_horiz";default:throw new se(e.status)}}getPatchIconColorClass(e){switch(e.status){case M.Added:case M.Untracked:return"green";case M.Conflicted:case M.Modified:return"orange";case M.Deleted:return"red";case M.Renamed:return"blue";default:throw new se(e.status)}}static{this.\u0275fac=function(t){return new(t||r)}}static{this.\u0275prov=X({token:r,factory:r.\u0275fac,providedIn:ge})}}return r})();function tt(r,T){if(r&1){let e=F();C(0,"mat-checkbox",7),y("change",function(i){P(e);let n=g().$implicit,o=g();return O(o.checkedChanged.next([n,i.checked]))}),k()}if(r&2){let e=g().$implicit,t=g();f("checked",t.isChecked(e))}}function nt(r,T){if(r&1){let e=F();C(0,"li",3),y("contextmenu",function(i){let n=P(e).$implicit,o=g();return O(o.contextMenuOpened.next([n,i]))}),C(1,"mat-icon",4),Y(2),k(),E(3,tt,1,1,"mat-checkbox",5),C(4,"app-condensed-path",6),y("click",function(){let i=P(e).$implicit,n=g();return O(n.selectedChanged.next(i))}),k()()}if(r&2){let e=T.$implicit,t=g();L("selected",t.isSelected(e))("checked",t.isChecked(e)),u(),f("ngClass",t.getPatchIconColorClass(e)),u(),N(t.getPatchIcon(e)),u(),f("ngIf",t.checked),u(),f("path",t.getPatchPath(e))}}var Ge=(()=>{class r extends K(Q,Ne){constructor(e){super(),this.commitDetailService=e,this.checked=null,this.checkedChanged=new D,this.selectedChanged=new D,this.contextMenuOpened=new D,this.keyPressDisabled=!1}ngOnChanges(e){e.selected&&(this.keyPressDisabled=!1),e.patches&&(this.orderedPatches=Ee(this.patches,[t=>t.status===M.Conflicted,t=>(t.oldFilePath??t.newFilePath??"").toLowerCase()],["desc","asc"]))}trackByPatch(e,t){return`${t.oldFilePath}|${t.newFilePath}|${t.status}`}getPatchPath(e){return this.commitDetailService.getPatchPath(e)}getPatchIcon(e){return this.commitDetailService.getPatchIcon(e)}getPatchIconColorClass(e){return this.commitDetailService.getPatchIconColorClass(e)}isChecked(e){return this.checked?.some(({oldFilePath:t,newFilePath:i})=>t===e.oldFilePath&&i===e.newFilePath)}isSelected(e){return e.oldFilePath===this.selected?.oldFilePath&&e.newFilePath===this.selected.newFilePath}keyPressed(e){if(this.keyPressDisabled)return;e.preventDefault();let t=this.selected,i=this.orderedPatches.findIndex(({oldFilePath:o,newFilePath:c})=>o===t?.oldFilePath&&c===t?.newFilePath),n=null;switch(e.key){case"ArrowUp":if(!(H?e.metaKey:e.ctrlKey)){i>0&&(n=i-1);break}case"Home":n=0;break;case"ArrowDown":if(!(H?e.metaKey:e.ctrlKey)){i<this.orderedPatches.length-1&&(n=i+1);break}case"End":n=this.orderedPatches.length-1;break;case"Escape":i>=0&&(n=i);break}if(n!==null){this.keyPressDisabled=!0;let o=this.orderedPatches[n];o&&this.selectedChanged.next(o);let c=this.viewports.first,d=c.measureScrollOffset("top"),s=d+c.getViewportSize(),m=n*22;(m<d||m>=s)&&c.scrollToIndex(n)}}static{this.\u0275fac=function(t){return new(t||r)(B(_e))}}static{this.\u0275cmp=z({type:r,selectors:[["app-patch-list"]],viewQuery:function(t,i){if(t&1&&ie(le,5),t&2){let n;oe(n=ce())&&(i.viewports=n)}},inputs:{patches:"patches",checked:"checked",selected:"selected"},outputs:{checkedChanged:"checkedChanged",selectedChanged:"selectedChanged",contextMenuOpened:"contextMenuOpened"},standalone:!1,features:[U,te],decls:3,vars:7,consts:[["tabindex","0",1,"item-list-container",3,"keydown","itemSize","maxBufferPx","minBufferPx"],[1,"patch-list"],[3,"selected","checked","contextmenu",4,"cdkVirtualFor","cdkVirtualForOf","cdkVirtualForTrackBy"],[3,"contextmenu"],["inline","",3,"ngClass"],[3,"checked","change",4,"ngIf"],[1,"name",3,"click","path"],[3,"change","checked"]],template:function(t,i){t&1&&(C(0,"cdk-virtual-scroll-viewport",0),y("keydown",function(o){return i.keyPressed(o)}),C(1,"ul",1),E(2,nt,5,8,"li",2),k()()),t&2&&(f("itemSize",22)("maxBufferPx",400)("minBufferPx",200),u(),L("checkboxes",i.checked),u(),f("cdkVirtualForOf",i.orderedPatches)("cdkVirtualForTrackBy",i.trackByPatch))},dependencies:[pe,Te,Ve,le,re,A,R,Ae],styles:["[_nghost-%COMP%]{display:contents}.item-list-container[_ngcontent-%COMP%]{margin-left:-16px;margin-right:-16px;height:100%;contain:content;outline:none}.item-list-container[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper{width:100%}.item-list-container[_ngcontent-%COMP%]     .cdk-virtual-scroll-spacer{position:relative}.patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{display:flex;height:22px;line-height:22px;padding-left:16px;padding-right:16px;position:relative;overflow:hidden;text-overflow:ellipsis;cursor:pointer;gap:4px}.patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%]{display:none;flex:0 0 22px;width:22px;font-size:0;--mat-checkbox-ripple-size: 28px;--mat-checkbox-touch-target-size: 22px}.patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%]    >.mdc-form-field{margin:-9px}.patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{flex:0 0 22px;user-select:none;width:22px;text-align:center}.patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{width:calc(100% - 22px)}.patch-list.checkboxes[_ngcontent-%COMP%] > li.checked[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%], .patch-list.checkboxes[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover   mat-icon[_ngcontent-%COMP%]{display:none}.patch-list.checkboxes[_ngcontent-%COMP%] > li.checked[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%], .patch-list.checkboxes[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover   mat-checkbox[_ngcontent-%COMP%]{display:block}.dark-theme[_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover, .dark-theme   [_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover{background-color:#515151}.dark-theme[_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li.selected[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li.selected[_ngcontent-%COMP%]{background-color:#616161}.dark-theme[_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.red[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.red[_ngcontent-%COMP%]{color:#ef5350}.dark-theme[_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.green[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.green[_ngcontent-%COMP%]{color:#4caf50}.dark-theme[_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.orange[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.orange[_ngcontent-%COMP%]{color:#cb8837}.dark-theme[_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.blue[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.blue[_ngcontent-%COMP%]{color:#7c8bff}.light-theme[_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover, .light-theme   [_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:hover{background-color:#e0e0e0}.light-theme[_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li.selected[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li.selected[_ngcontent-%COMP%]{background-color:#bdbdbd}.light-theme[_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.red[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.red[_ngcontent-%COMP%]{color:#ef5350}.light-theme[_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.green[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.green[_ngcontent-%COMP%]{color:#4caf50}.light-theme[_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.orange[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.orange[_ngcontent-%COMP%]{color:#d8a669}.light-theme[_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.blue[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .patch-list[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   mat-icon.blue[_ngcontent-%COMP%]{color:#7c8bff}"],changeDetection:0})}}return r})();function ct(r,T){if(r&1){let e=F();C(0,"mat-checkbox",8),y("click",function(i){return P(e),O(i.stopPropagation())})("change",function(i){P(e);let n=g().$implicit,o=g();return O(o.clickNodeCheckbox(n,i.checked))}),k()}if(r&2){let e=g().$implicit;f("checked",e.checked==="all")("indeterminate",e.checked==="some")}}function rt(r,T){if(r&1){let e=F();C(0,"div",3),y("click",function(i){let n=P(e).$implicit,o=g();return O(o.toggleNodeExpanded(i,n))}),C(1,"mat-icon",4),Y(2,"folder"),k(),E(3,ct,1,2,"mat-checkbox",5),C(4,"span",6),Y(5),k(),C(6,"mat-icon",7),Y(7),k()()}if(r&2){let e=T.$implicit,t=g();L("checked",e.checked==="all"),u(3),f("ngIf",t.checked),u(),f("matTooltip",e.id),u(),N(e.segment),u(2),N(e.expanded?"expand_less":"expand_more")}}function at(r,T){if(r&1){let e=F();C(0,"mat-checkbox",13),y("change",function(i){P(e);let n=g().$implicit,o=g();return O(o.checkedChanged.next([n.patch,i.checked]))}),k()}if(r&2){let e=g().$implicit;f("checked",e.checked)}}function st(r,T){if(r&1){let e=F();C(0,"div",9),y("contextmenu",function(i){let n=P(e).$implicit,o=g();return O(o.contextMenuOpened.next([n.patch,i]))}),C(1,"mat-icon",10),Y(2),k(),E(3,at,1,1,"mat-checkbox",11),C(4,"span",12),y("click",function(){let i=P(e).$implicit,n=g();return O(n.selectedChanged.next(i.patch))}),Y(5),k()()}if(r&2){let e=T.$implicit,t=g();L("checked",e.checked)("selected",t.isSelected(e.patch)),u(),f("ngClass",t.getPatchIconColorClass(e.patch)),u(),N(t.getPatchIcon(e.patch)),u(),f("ngIf",t.checked),u(),f("matTooltip",t.getPatchPath(e.patch)??""),u(),N(e.segment)}}var Xe=(()=>{class r extends K(Q){constructor(e){super(),this.commitDetailService=e,this.checkedChanged=new D,this.selectedChanged=new D,this.contextMenuOpened=new D,this.tree=new j([]),this.leafNodes=new j([]),this.collapsedNodeIds=new j(new Set),this.keyPressDisabled=!1,this.toggleNodeExpanded=(t,i)=>{t.preventDefault(),t.stopPropagation();let n=new Set(this.collapsedNodeIds.value);n.has(i.id)?(n.delete(i.id),this.collapsedNodeIds.next(n)):(n.add(i.id),this.collapsedNodeIds.next(n))},this.getDescendantsLeafNodes=t=>t.reduce((i,n)=>[...i,..."patch"in n?[n]:this.getDescendantsLeafNodes(n.children)],[]),this.getDescendantsList=t=>t.reduce((i,n)=>[...i,..."patch"in n?[n]:[n,...this.getDescendantsList(n.children)]],[])}ngOnInit(){Pe([this.patches,this.checked??ue(null),this.collapsedNodeIds]).pipe(Me(([e,t,i])=>{let n=e.map(o=>({patch:o,segments:(o.newFilePath??o.oldFilePath??"").split("/")}));return this.buildTree(n,"",0,t,i)})).subscribe(e=>{this.tree.next(e),this.leafNodes.next(this.getDescendantsLeafNodes(e)),this.keyPressDisabled=!1})}getPatchPath(e){return this.commitDetailService.getPatchPath(e)}getPatchIcon(e){return this.commitDetailService.getPatchIcon(e)}getPatchIconColorClass(e){return this.commitDetailService.getPatchIconColorClass(e)}isSelected(e){return e.oldFilePath===this.selected?.oldFilePath&&e.newFilePath===this.selected.newFilePath}clickNodeCheckbox(e,t){for(let i of this.getDescendantsLeafNodes(e.children))this.checkedChanged.next([i.patch,t])}buildTree(e,t,i,n,o){return Object.entries(Se(e,({segments:s})=>s[0])).sort(([s],[m])=>s.localeCompare(m,void 0,{numeric:!0})).flatMap(([s,m])=>{let w=`${t}${s}/`,b=`${t}${s}`,S=m.filter(({segments:a})=>a.length>1),I=n?m.every(({patch:a})=>n.some(({oldFilePath:p,newFilePath:x})=>p===a.oldFilePath&&x===a.newFilePath))?"all":m.some(({patch:a})=>n.some(({oldFilePath:p,newFilePath:x})=>p===a.oldFilePath&&x===a.newFilePath))?"some":"none":"none",V=S.length>0?{id:w,depth:i,expanded:!o.has(w),children:this.buildTree(S.map(({patch:a,segments:p})=>({patch:a,segments:p.slice(1)})),w,i+1,n,o),segment:s,checked:I}:null,h=m.find(({segments:a})=>a.length<=1),l=h?{id:b,depth:i,segment:s,patch:h.patch,checked:n?.some(({oldFilePath:a,newFilePath:p})=>a===h.patch.oldFilePath&&p===h.patch.newFilePath)??!1}:null;return l&&V?[l,V]:V?[V]:l?[l]:[]})}keyPressed(e){if(this.keyPressDisabled)return;e.preventDefault();let t=this.selected,i=this.leafNodes.value,n=i.findIndex(({patch:c})=>c.oldFilePath===t?.oldFilePath&&c.newFilePath===t?.newFilePath),o=null;switch(e.key){case"ArrowUp":if(!(H?e.metaKey:e.ctrlKey)){n>0&&(o=n-1);break}case"Home":o=0;break;case"ArrowDown":if(!(H?e.metaKey:e.ctrlKey)){n<i.length-1&&(o=n+1);break}case"End":o=i.length-1;break;case"Escape":n>=0&&(o=n);break}if(o!==null){this.keyPressDisabled=!0;let c=i[o];c&&this.selectedChanged.next(c.patch);let d=this.virtualTree.viewports.first,s=d.measureScrollOffset("top"),m=s+d.getViewportSize(),w=0,b=this.getDescendantsList(this.tree.value);for(let I of this.getDescendantsList(this.tree.value)){if(I===c)break;w++}let S=w*22;(S<s||S>=m)&&d.scrollToIndex(w)}}static{this.\u0275fac=function(t){return new(t||r)(B(_e))}}static{this.\u0275cmp=z({type:r,selectors:[["app-patch-tree"]],viewQuery:function(t,i){if(t&1&&ie(he,5),t&2){let n;oe(n=ce())&&(i.virtualTree=n.first)}},inputs:{patches:"patches",checked:"checked",selected:"selected"},outputs:{checkedChanged:"checkedChanged",selectedChanged:"selectedChanged",contextMenuOpened:"contextMenuOpened"},standalone:!1,features:[U],decls:3,vars:4,consts:[[3,"keyPressed","tree","itemSize"],["class","node-item",3,"checked","click",4,"appVirtualTreeNode"],["class","leaf-item",3,"checked","selected","contextmenu",4,"appVirtualTreeLeafNode"],[1,"node-item",3,"click"],["inline","",1,"node-icon"],[3,"checked","indeterminate","click","change",4,"ngIf"],[1,"text",3,"matTooltip"],[1,"expand-icon"],[3,"click","change","checked","indeterminate"],[1,"leaf-item",3,"contextmenu"],["inline","",1,"node-icon",3,"ngClass"],[3,"checked","change",4,"ngIf"],[1,"text",3,"click","matTooltip"],[3,"change","checked"]],template:function(t,i){t&1&&(C(0,"app-virtual-tree",0),y("keyPressed",function(o){return i.keyPressed(o)}),E(1,rt,8,6,"div",1)(2,st,6,9,"div",2),k()),t&2&&(L("checkboxes",!!i.checked),f("tree",i.tree)("itemSize",22))},dependencies:[pe,re,A,R,de,he,Qe,Re],styles:["[_nghost-%COMP%]{display:contents}app-virtual-tree[_ngcontent-%COMP%]{display:contents}app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport{contain:content;scrollbar-gutter:stable;margin-left:-16px;margin-right:-16px}app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport .cdk-virtual-scroll-content-wrapper{width:100%}app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport .cdk-virtual-scroll-content-wrapper>ul{overflow-x:auto;overflow-y:hidden}app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport .cdk-virtual-scroll-spacer{position:relative}app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport li:has(>.leaf-item.selected){background-color:#616161}.node-item[_ngcontent-%COMP%], .leaf-item[_ngcontent-%COMP%]{margin-left:16px;display:flex;justify-content:space-between;cursor:pointer;line-height:22px;height:22px;user-select:none;align-items:center;min-width:200px;gap:4px}.node-item[_ngcontent-%COMP%] > .node-icon[_ngcontent-%COMP%], .leaf-item[_ngcontent-%COMP%] > .node-icon[_ngcontent-%COMP%]{flex:0 0 22px;user-select:none;width:22px;text-align:center}.node-item[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%], .node-item[_ngcontent-%COMP%]   .checkbox-button[_ngcontent-%COMP%], .leaf-item[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%], .leaf-item[_ngcontent-%COMP%]   .checkbox-button[_ngcontent-%COMP%]{display:none;flex:0 0 22px;width:22px;height:22px;font-size:0;--mat-checkbox-ripple-size: 28px;--mat-checkbox-touch-target-size: 22px}.node-item[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%]    >.mdc-form-field, .node-item[_ngcontent-%COMP%]   .checkbox-button[_ngcontent-%COMP%]    >.mdc-form-field, .leaf-item[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%]    >.mdc-form-field, .leaf-item[_ngcontent-%COMP%]   .checkbox-button[_ngcontent-%COMP%]    >.mdc-form-field{margin:-9px}.node-item[_ngcontent-%COMP%] > .text[_ngcontent-%COMP%], .leaf-item[_ngcontent-%COMP%] > .text[_ngcontent-%COMP%]{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.node-item[_ngcontent-%COMP%] > .expand-icon[_ngcontent-%COMP%], .leaf-item[_ngcontent-%COMP%] > .expand-icon[_ngcontent-%COMP%]{flex:0 0 auto;color:#ffffffb3;line-height:22px}app-virtual-tree.checkboxes[_ngcontent-%COMP%]   .node-item.checked[_ngcontent-%COMP%]   .node-icon[_ngcontent-%COMP%], app-virtual-tree.checkboxes[_ngcontent-%COMP%]   .node-item[_ngcontent-%COMP%]:has(.node-icon:hover,mat-checkbox:hover)   .node-icon[_ngcontent-%COMP%], app-virtual-tree.checkboxes[_ngcontent-%COMP%]   .leaf-item.checked[_ngcontent-%COMP%]   .node-icon[_ngcontent-%COMP%], app-virtual-tree.checkboxes[_ngcontent-%COMP%]   .leaf-item[_ngcontent-%COMP%]:hover   .node-icon[_ngcontent-%COMP%]{display:none}app-virtual-tree.checkboxes[_ngcontent-%COMP%]   .node-item.checked[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%], app-virtual-tree.checkboxes[_ngcontent-%COMP%]   .node-item.checked[_ngcontent-%COMP%]   .checkbox-button[_ngcontent-%COMP%], app-virtual-tree.checkboxes[_ngcontent-%COMP%]   .node-item[_ngcontent-%COMP%]:has(.node-icon:hover,mat-checkbox:hover)   mat-checkbox[_ngcontent-%COMP%], app-virtual-tree.checkboxes[_ngcontent-%COMP%]   .node-item[_ngcontent-%COMP%]:has(.node-icon:hover,mat-checkbox:hover)   .checkbox-button[_ngcontent-%COMP%], app-virtual-tree.checkboxes[_ngcontent-%COMP%]   .leaf-item.checked[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%], app-virtual-tree.checkboxes[_ngcontent-%COMP%]   .leaf-item.checked[_ngcontent-%COMP%]   .checkbox-button[_ngcontent-%COMP%], app-virtual-tree.checkboxes[_ngcontent-%COMP%]   .leaf-item[_ngcontent-%COMP%]:hover   mat-checkbox[_ngcontent-%COMP%], app-virtual-tree.checkboxes[_ngcontent-%COMP%]   .leaf-item[_ngcontent-%COMP%]:hover   .checkbox-button[_ngcontent-%COMP%]{display:block}.dark-theme[_nghost-%COMP%]   app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport li:has(>.leaf-item:hover), .dark-theme   [_nghost-%COMP%]   app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport li:has(>.leaf-item:hover){background-color:#515151}.dark-theme[_nghost-%COMP%]   app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport li:has(>.leaf-item.selected), .dark-theme   [_nghost-%COMP%]   app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport li:has(>.leaf-item.selected){background-color:#616161}.dark-theme[_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.red[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.red[_ngcontent-%COMP%], .dark-theme[_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.red[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.red[_ngcontent-%COMP%]{color:#ef5350}.dark-theme[_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.green[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.green[_ngcontent-%COMP%], .dark-theme[_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.green[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.green[_ngcontent-%COMP%]{color:#4caf50}.dark-theme[_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.orange[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.orange[_ngcontent-%COMP%], .dark-theme[_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.orange[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.orange[_ngcontent-%COMP%]{color:#cb8837}.dark-theme[_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.blue[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.blue[_ngcontent-%COMP%], .dark-theme[_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.blue[_ngcontent-%COMP%], .dark-theme   [_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.blue[_ngcontent-%COMP%]{color:#7c8bff}.light-theme[_nghost-%COMP%]   app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport li:has(>.leaf-item:hover), .light-theme   [_nghost-%COMP%]   app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport li:has(>.leaf-item:hover){background-color:#e0e0e0}.light-theme[_nghost-%COMP%]   app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport li:has(>.leaf-item.selected), .light-theme   [_nghost-%COMP%]   app-virtual-tree[_ngcontent-%COMP%]    >cdk-virtual-scroll-viewport li:has(>.leaf-item.selected){background-color:#bdbdbd}.light-theme[_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.red[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.red[_ngcontent-%COMP%], .light-theme[_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.red[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.red[_ngcontent-%COMP%]{color:#ef5350}.light-theme[_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.green[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.green[_ngcontent-%COMP%], .light-theme[_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.green[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.green[_ngcontent-%COMP%]{color:#4caf50}.light-theme[_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.orange[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.orange[_ngcontent-%COMP%], .light-theme[_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.orange[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.orange[_ngcontent-%COMP%]{color:#d8a669}.light-theme[_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.blue[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .node-item[_ngcontent-%COMP%] > .node-icon.blue[_ngcontent-%COMP%], .light-theme[_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.blue[_ngcontent-%COMP%], .light-theme   [_nghost-%COMP%]   .leaf-item[_ngcontent-%COMP%] > .node-icon.blue[_ngcontent-%COMP%]{color:#7c8bff}"],changeDetection:0})}}return r})();function dt(r,T){if(r&1){let e=F();C(0,"app-patch-list",6),J(1,"async"),y("checkedChanged",function(i){P(e);let n=g(2);return O(n.checkedChanged.next(i))})("selectedChanged",function(i){P(e);let n=g(2);return O(n.selectedChanged.next(i))})("contextMenuOpened",function(i){P(e);let n=g(2);return O(n.contextMenuOpened.next(i))}),k()}if(r&2){let e=g(2);f("patches",e.patches)("checked",Z(1,3,e.checked))("selected",e.selected)}}function ht(r,T){if(r&1){let e=F();C(0,"app-patch-tree",6),y("checkedChanged",function(i){P(e);let n=g(2);return O(n.checkedChanged.next(i))})("selectedChanged",function(i){P(e);let n=g(2);return O(n.selectedChanged.next(i))})("contextMenuOpened",function(i){P(e);let n=g(2);return O(n.contextMenuOpened.next(i))}),k()}if(r&2){let e=g(2);f("patches",e.patches$)("checked",e.checked)("selected",e.selected)}}function mt(r,T){if(r&1){let e=F();ke(0),C(1,"header")(2,"mat-button-toggle-group",1),y("change",function(i){P(e);let n=g();return O(n.changePatchView(i.value))}),C(3,"mat-button-toggle",2),J(4,"translate"),C(5,"mat-icon"),Y(6,"list"),k()(),C(7,"mat-button-toggle",3),J(8,"translate"),Oe(9,"mat-icon",4),k()()(),E(10,dt,2,5,"app-patch-list",5)(11,ht,1,3,"app-patch-tree",5),Ie()}if(r&2){let e=T.ngIf;u(2),f("value",e),u(),f("matTooltip",Z(4,5,"List View")),u(4),f("matTooltip",Z(8,7,"Tree View")),u(3),f("ngIf",e==="list"),u(),f("ngIf",e==="tree")}}var an=(()=>{class r extends K(Q){constructor(e){super(),this.store=e,this.checked=null,this.checkedChanged=new D,this.selectedChanged=new D,this.contextMenuOpened=new D,this.patches$=new j([])}ngOnChanges(e){e.patches&&this.patches$.next(this.patches)}changePatchView(e){this.store.dispatch(new je(e))}static{this.\u0275fac=function(t){return new(t||r)(B(De))}}static{this.\u0275cmp=z({type:r,selectors:[["app-patches-view"]],inputs:{patches:"patches",checked:"checked",selected:"selected"},outputs:{checkedChanged:"checkedChanged",selectedChanged:"selectedChanged",contextMenuOpened:"contextMenuOpened"},standalone:!1,features:[U,te],decls:2,vars:3,consts:[[4,"ngIf"],[3,"change","value"],["value","list",3,"matTooltip"],["value","tree",3,"matTooltip"],["svgIcon","file-tree"],[3,"patches","checked","selected","checkedChanged","selectedChanged","contextMenuOpened",4,"ngIf"],[3,"checkedChanged","selectedChanged","contextMenuOpened","patches","checked","selected"]],template:function(t,i){t&1&&(E(0,mt,12,9,"ng-container",0),J(1,"async")),t&2&&f("ngIf",Z(1,1,i.view))},dependencies:[ye,ve,A,R,de,Ge,Xe,we,Ke],styles:["[_nghost-%COMP%]{display:contents}header[_ngcontent-%COMP%]{flex:0 0 auto;text-align:center;margin-bottom:-4px}header[_ngcontent-%COMP%]   mat-button-toggle-group[_ngcontent-%COMP%]{height:30px}header[_ngcontent-%COMP%]   mat-button-toggle-group[_ngcontent-%COMP%]   mat-button-toggle[_ngcontent-%COMP%]{font-size:0}header[_ngcontent-%COMP%]   mat-button-toggle-group[_ngcontent-%COMP%]   mat-button-toggle[_ngcontent-%COMP%]     .mat-button-toggle-label-content{line-height:28px;padding:0 5px}"],changeDetection:0})}}return Ce([Fe(Be.patchView)],r.prototype,"view",void 0),r})();var _n=(()=>{class r{static{this.\u0275fac=function(t){return new(t||r)}}static{this.\u0275mod=ne({type:r})}static{this.\u0275inj=ee({imports:[be,ze,He,Ue,me,ge]})}}return r})();var Mn=(()=>{class r{constructor(){this.isDashed=e=>e.id==="head"||e.id.startsWith("merge:")}static{this.xUnit=15}static{this.yUnit=28}static{this.xOffset=15/2}static{this.yOffset=26/2}static{this.totalColors=15}isIndexInBounds(e,t,i){let n=e*r.yUnit;return n>=t&&n<i-r.yUnit}calculateVisible(e,t,i,n,o){return{commitDetails:e.slice(n,o),commitTrails:t.filter(c=>c.minYIndexWithMerges<=o&&c.maxYIndexWithMerges>=n),mergePaths:i.filter(c=>c.from.yIndex>=n&&c.to.some(d=>d.yIndex<=o))}}calculate(e,t,i,n,o,c,d){let s={},m=[],w=[],b=[],S=(e?1:0)+t.length;n.forEach((l,a)=>{s[l.id]={id:l.id,yIndex:a+S,commit:l}});let I=[];t.forEach((l,a)=>{let p=`merge:${l.fromCommitId}:${l.toCommitId}`,x={id:p,message:l.message??We("merge: from _branch_ into _branch_",{from:l.fromCommitId,to:l.toCommitId}),parentIds:[l.toCommitId,l.fromCommitId],time:0,references:[],authorEmail:"",authorName:""};I.push(x),s[p]={id:p,yIndex:a+(e?1:0),commit:x}}),i.forEach(l=>{let a=s[l.id],p=a?.commit.parentIds[1];!a||!p||a.commit.parentIds.length!==2||(a.stash={index:l.index,workingDirCommitId:l.id,indexCommitId:p})});let V=e?{id:"head",message:"",parentIds:e.parentId?[e.parentId,...e.mergeHeads]:[...e.mergeHeads],time:0,references:[],authorEmail:"",authorName:""}:null;e&&(s.head={id:"head",yIndex:0,commit:V},e.parentId);let h=V?[V,...I,...n]:[...I,...n];if(h.forEach(l=>{let a=s[l.id];if(!a)throw new ae(l.id);a.trail||this.calculateTrail(a,s,m,w),!a.stash&&l.parentIds.length>1&&l.parentIds.slice(1).forEach(p=>{let x=s[p];if(x)if(x.mergeFrom)x.mergeFrom.to.push(a);else{let _={from:x,to:[a]};x.mergeFrom=_,b.push(_)}})}),{mergePaths:b,lanes:w}=this.calculateMergePaths(b,w,o,c),this.calculateColors(m,d),e&&e.parentId&&s[e.parentId]){let l=m.find(a=>a.minYIndex===0);if(l){l.commits=l.commits.filter(p=>p.id!=="head");let a=G(l.commits,p=>p.yIndex);l.minYIndex=a?.yIndex??0,l.minYIndexWithMerges=a?.yIndex??0,this.createUncommittedTrail(s.head,s[e.parentId],m,l.colorIndex,l.lane)}}return I.forEach((l,a)=>{let p=m.find($=>$.minYIndex===a+(e?1:0)),x=l.parentIds[0],_=x?s[x]:void 0;if(p&&_){if(p.commits=p.commits.filter(v=>v.id!==l.id),p.commits.length<=0)m=m.filter(v=>v!==p);else{let v=G(p.commits.filter(W=>W.id!=="head"&&!W.id.startsWith("merge:")),W=>W.yIndex);p.minYIndex=v?.yIndex??0,p.minYIndexWithMerges=v?.yIndex??0}let $=s[l.id];if(!$)throw new ae;this.createUncommittedTrail($,_,m,p.colorIndex,p.lane)}}),i.forEach(l=>{let a=s[l.id];if(!a)return;let p=a.commit,x=a.trail,_=p.parentIds[0],$=_?s[_]:void 0;if($){if(x.commits=x.commits.filter(v=>v.id!==l.id),x.commits.length<=0)m=m.filter(v=>v!==x);else{let v=G(x.commits,W=>W.yIndex);x.minYIndex=v?.yIndex??0,x.minYIndexWithMerges=v?.yIndex??0}this.createUncommittedTrail(a,$,m,x.colorIndex,x.lane)}}),{commitDetails:s,commitTrails:m,lanes:w,mergePaths:b,headCommit:V,orderedCommits:h}}createUncommittedTrail(e,t,i,n,o){let c=t.yIndex;t.mergeFrom&&t.mergeFrom.to.length>0&&t.mergeFrom.to.some(s=>!this.isDashed(s))&&(c=Math.min(...t.mergeFrom.to.filter(s=>!this.isDashed(s)).map(({yIndex:s})=>s))+.25,c<e.yIndex&&(c=e.yIndex+.5),i.push({trailIndex:i.length,minYIndex:c,maxYIndex:t.yIndex,minYIndexWithMerges:c,maxYIndexWithMerges:t.yIndex,colorIndex:n,commits:[],isDashed:!1,lane:o}));let d={trailIndex:i.length,minYIndex:e.yIndex,maxYIndex:c,minYIndexWithMerges:e.yIndex,maxYIndexWithMerges:c,colorIndex:n,commits:[e],isDashed:!0,lane:o};return e.trail=d,i.push(d),d}calculateTrail(e,t,i,n){let o={trailIndex:i.length,minYIndex:e.yIndex,maxYIndex:e.yIndex,minYIndexWithMerges:e.yIndex,maxYIndexWithMerges:e.yIndex,colorIndex:null,commits:[],isDashed:!1};if(e.commit.parentIds.length<=0)e.trail=o,o.commits.push(e),o.maxYIndex=e.yIndex,o.maxYIndexWithMerges=e.yIndex;else{let d=e;for(;d&&!d.trail&&d.commit.parentIds.length>0;){d.trail=o,o.maxYIndex=d.yIndex,o.maxYIndexWithMerges=d.yIndex,o.commits.push(d);let s=d.commit.parentIds[0];d=s?t[s]:void 0}d&&(o.maxYIndex=d.yIndex,o.maxYIndexWithMerges=d.yIndex,d.trail||(d.trail=o,o.commits.push(d)))}let c=n.find(d=>{let s=this.getLaneMaxYIndex(d);return s===void 0?!0:s<o.minYIndex});return c||(c={xIndex:n.length,occupations:[]},n.push(c)),c.occupations.push({type:"commit-trail",minYIndex:o.minYIndex,maxYIndex:o.maxYIndex}),o.lane=c,i.push(o),o}calculateMergePaths(e,t,i,n){t=t.map(c=>fe(xe({},c),{occupations:c.occupations.filter(d=>d.type!=="merge-path")})).filter(c=>c.occupations.length>0);let o=[...e];return e.forEach(c=>{let d=[],s=[];c.to.forEach(h=>{c.from.trail.minYIndexWithMerges>h.yIndex&&(c.from.trail.minYIndexWithMerges=h.yIndex),c.from.trail.maxYIndexWithMerges<h.yIndex&&(c.from.trail.maxYIndexWithMerges=h.yIndex),h.trail.minYIndexWithMerges>c.from.yIndex&&(h.trail.minYIndexWithMerges=c.from.yIndex),h.trail.maxYIndexWithMerges<c.from.yIndex&&(h.trail.maxYIndexWithMerges=c.from.yIndex)});let m,w=c.from.trail.lane.xIndex,b=i(w),S=[],I=c.to,V=c.to.every(this.isDashed);if(c.from.trail.minYIndex<c.from.yIndex){let h=c.from.trail.commits.findIndex(a=>a.id===c.from.id),l=c.from.trail.commits[h-1];if(!l)throw new ae;S=c.to.filter(a=>a.yIndex>l.yIndex),I=c.to.filter(a=>a.yIndex<=l.yIndex),m=l.yIndex}else{d.push(`M ${b} ${n(c.from.yIndex)}`),d.push(`V ${n(c.from.yIndex-.5)}`),m=c.from.yIndex-1;let h=$e(I,l=>l.yIndex);if(h&&h.yIndex===c.from.yIndex-1){I=I.filter(a=>a.id!==h.id);let l=`L ${i(h.trail.lane.xIndex)} ${n(h.yIndex)}`;this.isDashed(h)?s.push(l):d.push(l)}}if(I.length>0){let h=Math.min(...I.map(_=>_.yIndex)),l=t.filter(_=>!this.isLaneOccupied(_,h+1,m)),a=G(l,_=>[...I,c.from].reduce(($,v)=>$+Math.abs(v.trail.lane.xIndex-_.xIndex),0))??{xIndex:t.length,occupations:[]};l.length===0&&t.push(a),a.occupations.push({type:"merge-path",minYIndex:h+1,maxYIndex:m});let p=I.filter(this.isDashed),x=I.filter(_=>!this.isDashed(_));if(d.push(...x.flatMap(_=>[`M ${i(a.xIndex)} ${n(_.yIndex+.5)}`,`L ${this.adjustForDashedLine(!1,a.xIndex,_.trail.lane.xIndex,_.yIndex+.5,_.yIndex,i,n)}`])),s.push(...p.flatMap(_=>[`M ${i(a.xIndex)} ${n(_.yIndex+.5)}`,`L ${this.adjustForDashedLine(!0,a.xIndex,_.trail.lane.xIndex,_.yIndex+.5,_.yIndex,i,n)}`])),V)d.push(`M ${b} ${n(m+.5)}`,`L ${i(a.xIndex)} ${n(m+.25)}`,`V ${n(h+.5)}`);else{let _=Math.min(...x.map($=>$.yIndex));d.push(`M ${b} ${n(m+.5)}`,`L ${i(a.xIndex)} ${n(m+.25)}`,`V ${n(_+.5)}`),s.push(`M ${b} ${n(_+.5)}`,`V ${n(h+.5)}`)}}d.push(...S.filter(h=>!this.isDashed(h)).flatMap(h=>[`M ${b} ${n(h.yIndex+.25)}`,`L ${this.adjustForDashedLine(!1,w,h.trail.lane.xIndex,h.yIndex+.25,h.yIndex,i,n)}`])),s.push(...S.filter(this.isDashed).flatMap(h=>[`M ${b} ${n(h.yIndex+.25)}`,`L ${this.adjustForDashedLine(!0,w,h.trail.lane.xIndex,h.yIndex+.25,h.yIndex,i,n)}`])),V?(c.isDashed=!0,c.path=[...d,...s].join(" ")):(c.isDashed=!1,c.path=d.join(" "),s.length>0&&o.push({from:c.from,isDashed:!0,path:s.join(" "),to:c.to.filter(this.isDashed)}))}),{mergePaths:o,lanes:t}}calculateColors(e,t){let i=Ye(0,t),n=[];e.forEach(o=>{let c=n.filter(s=>s.minYIndexWithMerges<=o.maxYIndexWithMerges&&s.maxYIndexWithMerges>=o.minYIndexWithMerges).map(s=>s.colorIndex),d=Le(i,...c);o.colorIndex=d[0]??o.trailIndex%t,n.push(o)})}getLaneMaxYIndex(e){return e.occupations[e.occupations.length-1]?.maxYIndex}isLaneOccupied(e,t,i){return e.occupations.some(n=>n.minYIndex<=i&&n.maxYIndex>=t)}adjustForDashedLine(e,t,i,n,o,c,d){let s=e?t>i?.3:-.3:0,m=e?n>o?.15:-.15:0;return`${c(i+s)} ${d(o+m)}`}static{this.\u0275fac=function(t){return new(t||r)}}static{this.\u0275prov=X({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})();export{ge as a,_e as b,an as c,_n as d,Mn as e};
